Sample Code: OOALV Program using SAP FM to generate FieldCatalog
REPORT z31_ooalv1.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.


DATA: lt_fieldcat TYPE lvc_t_fcat.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'  "Building the FieldCatalog Using SAP FM
  EXPORTING
*   I_BUFFER_ACTIVE        =
    i_structure_name       = 'ZSTR_SFLI'
*   I_CLIENT_NEVER_DISPLAY = 'X'
*   I_BYPASSING_BUFFER     =
*   I_INTERNAL_TABNAME     =
  CHANGING
    ct_fieldcat            = lt_fieldcat
  EXCEPTIONS
    inconsistent_interface = 1
    program_error          = 2
    OTHERS                 = 3.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container

CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
*   it_sort                       =
*   it_filter                     =
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL SCREEN '0100'.









Sample Code: Manually Created FieldCatalog
REPORT z31_ooalv2.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.



DATA: lt_fieldcat TYPE lvc_t_fcat,
      ls_fieldcat TYPE lvc_s_fcat.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

ls_fieldcat-col_pos = 1.
ls_fieldcat-fieldname = 'CARRID'.
ls_fieldcat-scrtext_l = 'Airline Code'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 2.
ls_fieldcat-fieldname = 'CONNID'.
ls_fieldcat-scrtext_l = 'Flight Connection Number'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 3.
ls_fieldcat-fieldname = 'FLDATE'.
ls_fieldcat-scrtext_l = 'Flight date'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 4.
ls_fieldcat-fieldname = 'CURRENCY'.
ls_fieldcat-scrtext_l = 'Currency Key'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container

CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
*   it_sort                       =
*   it_filter                     =
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL SCREEN '0100'.










Sample Code: Non-Event Based Functionality Like Sorting/Filtering/Coloring
REPORT z31_ooalv3.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.



DATA: lt_fieldcat TYPE lvc_t_fcat,
      ls_fieldcat TYPE lvc_s_fcat.

DATA: lt_sort   TYPE lvc_t_sort,
      ls_sort   TYPE lvc_s_sort,
      lt_filter TYPE lvc_t_filt,
      ls_filter TYPE lvc_s_filt.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

ls_fieldcat-col_pos = 1.
ls_fieldcat-fieldname = 'CARRID'.
ls_fieldcat-scrtext_l = 'Airline Code'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 2.
ls_fieldcat-fieldname = 'CONNID'.
ls_fieldcat-scrtext_l = 'Flight Connection Number'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 3.
ls_fieldcat-fieldname = 'FLDATE'.
ls_fieldcat-scrtext_l = 'Flight date'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 4.
ls_fieldcat-fieldname = 'CURRENCY'.
ls_fieldcat-scrtext_l = 'Currency Key'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_sort-fieldname = 'CONNID'. "Sorting --> Non-Event Based Functionality
ls_sort-up ='X'.
APPEND ls_sort TO lt_sort.

ls_filter-fieldname = 'CARRID'.  "Filtering --> Non-Event Based Functionality
ls_filter-sign = 'I'.
ls_filter-option = 'EQ'.
ls_filter-low = 'AA'.
APPEND ls_filter TO lt_filter.


CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container


CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
    it_sort                       = lt_sort
    it_filter                     = lt_filter
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


CALL SCREEN '0200'.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'AIR_GUI'.
  SET TITLEBAR 'AIR_TITLE'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  IF sy-ucomm EQ 'E' OR sy-ucomm EQ 'CANCEL'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.










Sample Code: Double-Click Event
REPORT z31_ooalv4.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.

TYPES : BEGIN OF str_spf,
          carrid    TYPE s_carr_id,
          countryfr TYPE land1,
          cityfrom  TYPE s_from_cit,
        END OF str_spf.

DATA : lt_spf TYPE TABLE OF str_spf,
       ls_spf TYPE str_spf.

DATA: lt_fieldcat1 TYPE lvc_t_fcat,
      ls_fieldcat1 TYPE lvc_s_fcat.
DATA: lt_fieldcat2 TYPE lvc_t_fcat,
      ls_fieldcat2 TYPE lvc_s_fcat.

DATA: lo_cont1 TYPE REF TO cl_gui_custom_container,
      lo_grid1 TYPE REF TO cl_gui_alv_grid.
DATA: lo_cont2 TYPE REF TO cl_gui_custom_container,
      lo_grid2 TYPE REF TO cl_gui_alv_grid.

DATA: lt_index_rows TYPE lvc_t_row,
      ls_index_rows TYPE lvc_s_row.

CLASS class1 DEFINITION.
  PUBLIC SECTION.
    METHODS handle FOR EVENT double_click OF cl_gui_alv_grid.
ENDCLASS.

CLASS class1 IMPLEMENTATION.
  METHOD handle. "Event Handler Method to process the double-click request

    CALL METHOD lo_grid1->get_selected_rows   "Returns Index of Selected Row
      IMPORTING
        et_index_rows = lt_index_rows.

    READ TABLE lt_index_rows INTO ls_index_rows INDEX 1.
    IF sy-subrc EQ 0.

      READ TABLE lt_sfli INTO ls_sfli INDEX ls_index_rows-index.

      SELECT carrid countryfr cityfrom
        FROM spfli
        INTO TABLE lt_spf
        WHERE carrid EQ ls_sfli-carrid.

      CALL METHOD lo_grid2->set_table_for_first_display
        CHANGING
          it_outtab                     = lt_spf
          it_fieldcatalog               = lt_fieldcat2
*         it_sort                       =
*         it_filter                     =
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

SELECT-OPTIONS : s_carrid FOR sflight-carrid.

START-OF-SELECTION.

  SELECT carrid connid fldate currency
    FROM sflight
    INTO TABLE lt_sfli
    WHERE carrid IN s_carrid.

  ls_fieldcat1-col_pos = 1.
  ls_fieldcat1-fieldname = 'CARRID'.
  ls_fieldcat1-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 2.
  ls_fieldcat1-fieldname = 'CONNID'.
  ls_fieldcat1-scrtext_l = 'Flight Connection Number'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 3.
  ls_fieldcat1-fieldname = 'FLDATE'.
  ls_fieldcat1-scrtext_l = 'Flight date'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 4.
  ls_fieldcat1-fieldname = 'CURRENCY'.
  ls_fieldcat1-scrtext_l = 'Currency Key'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.


  CREATE OBJECT lo_cont1 EXPORTING container_name = 'CONT1'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

  CREATE OBJECT lo_grid1 EXPORTING i_parent = lo_cont1. "Pass the object of Parent Container


  CALL METHOD lo_grid1->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_sfli
      it_fieldcatalog               = lt_fieldcat1
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  ls_fieldcat2-col_pos = 1.
  ls_fieldcat2-fieldname = 'CARRID'.
  ls_fieldcat2-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 2.
  ls_fieldcat2-fieldname = 'LAND1'.
  ls_fieldcat2-scrtext_l = 'Country From'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 3.
  ls_fieldcat2-fieldname = 'CITYFROM'.
  ls_fieldcat2-scrtext_l = 'Departure city'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  CREATE OBJECT lo_cont2 EXPORTING container_name = 'CONT2'.

  CREATE OBJECT lo_grid2 EXPORTING i_parent = lo_cont2.

  CALL METHOD lo_grid2->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_spf
      it_fieldcatalog               = lt_fieldcat2
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  DATA lo_object TYPE REF TO class1.
  CREATE OBJECT lo_object.
  SET HANDLER lo_object->handle FOR lo_grid1.   "Registering the Double-Click Event for Grid1

  CALL SCREEN '0100'.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm EQ 'E'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.










Sample Code: HotSpot-click Event 
REPORT z31_ooalv4.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.

TYPES : BEGIN OF str_spf,
          carrid    TYPE s_carr_id,
          countryfr TYPE land1,
          cityfrom  TYPE s_from_cit,
        END OF str_spf.

DATA : lt_spf TYPE TABLE OF str_spf,
       ls_spf TYPE str_spf.

DATA: lt_fieldcat1 TYPE lvc_t_fcat,
      ls_fieldcat1 TYPE lvc_s_fcat.
DATA: lt_fieldcat2 TYPE lvc_t_fcat,
      ls_fieldcat2 TYPE lvc_s_fcat.

DATA: lo_cont1 TYPE REF TO cl_gui_custom_container,
      lo_grid1 TYPE REF TO cl_gui_alv_grid.
DATA: lo_cont2 TYPE REF TO cl_gui_custom_container,
      lo_grid2 TYPE REF TO cl_gui_alv_grid.

DATA: lt_index_rows TYPE lvc_t_row,
      ls_index_rows TYPE lvc_s_row.

CLASS class1 DEFINITION.
  PUBLIC SECTION.
    METHODS handle FOR EVENT hotspot_click OF cl_gui_alv_grid.
ENDCLASS.

CLASS class1 IMPLEMENTATION.
  METHOD handle. "Event Handler Method to process the HotSpot-click request

    CALL METHOD lo_grid1->get_selected_rows   "Returns Index of Selected Row
      IMPORTING
        et_index_rows = lt_index_rows.

    READ TABLE lt_index_rows INTO ls_index_rows INDEX 1.
    IF sy-subrc EQ 0.

      READ TABLE lt_sfli INTO ls_sfli INDEX ls_index_rows-index.

      SELECT carrid countryfr cityfrom
        FROM spfli
        INTO TABLE lt_spf
        WHERE carrid EQ ls_sfli-carrid.

      CALL METHOD lo_grid2->set_table_for_first_display
        CHANGING
          it_outtab                     = lt_spf
          it_fieldcatalog               = lt_fieldcat2
*         it_sort                       =
*         it_filter                     =
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

SELECT-OPTIONS : s_carrid FOR sflight-carrid.

START-OF-SELECTION.

  SELECT carrid connid fldate currency
    FROM sflight
    INTO TABLE lt_sfli
    WHERE carrid IN s_carrid.

  ls_fieldcat1-col_pos = 1.
  ls_fieldcat1-fieldname = 'CARRID'.
  ls_fieldcat1-scrtext_l = 'Airline Code'.
  ls_fieldcat1-hotspot = 'X'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 2.
  ls_fieldcat1-fieldname = 'CONNID'.
  ls_fieldcat1-scrtext_l = 'Flight Connection Number'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 3.
  ls_fieldcat1-fieldname = 'FLDATE'.
  ls_fieldcat1-scrtext_l = 'Flight date'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 4.
  ls_fieldcat1-fieldname = 'CURRENCY'.
  ls_fieldcat1-scrtext_l = 'Currency Key'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.


  CREATE OBJECT lo_cont1 EXPORTING container_name = 'CONT1'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

  CREATE OBJECT lo_grid1 EXPORTING i_parent = lo_cont1. "Pass the object of Parent Container


  CALL METHOD lo_grid1->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_sfli
      it_fieldcatalog               = lt_fieldcat1
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  ls_fieldcat2-col_pos = 1.
  ls_fieldcat2-fieldname = 'CARRID'.
  ls_fieldcat2-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 2.
  ls_fieldcat2-fieldname = 'LAND1'.
  ls_fieldcat2-scrtext_l = 'Country From'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 3.
  ls_fieldcat2-fieldname = 'CITYFROM'.
  ls_fieldcat2-scrtext_l = 'Departure city'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  CREATE OBJECT lo_cont2 EXPORTING container_name = 'CONT2'.

  CREATE OBJECT lo_grid2 EXPORTING i_parent = lo_cont2.

  CALL METHOD lo_grid2->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_spf
      it_fieldcatalog               = lt_fieldcat2
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  DATA lo_object TYPE REF TO class1.
  CREATE OBJECT lo_object.
  SET HANDLER lo_object->handle FOR lo_grid1.   "Registering the HotSpot-Click Event for Grid1

  CALL SCREEN '0100'.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm EQ 'E'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.






Sample Code: Double-Click & Hotspot
REPORT z31_ooalv1.

DATA: container TYPE REF TO cl_gui_custom_container,
      grid1     TYPE REF TO cl_gui_alv_grid.

DATA: lo_cont2 TYPE REF TO cl_gui_custom_container,
      lo_grid2 TYPE REF TO cl_gui_alv_grid.

DATA: lt_index_rows TYPE lvc_t_row,
      ls_index_rows TYPE lvc_s_row.

DATA : lt_fieldcat TYPE lvc_t_fcat,
       ls_fieldcat TYPE lvc_s_fcat,
       ls_layout   TYPE lvc_s_layo.

DATA : lt_fieldcat2 TYPE lvc_t_fcat,
       ls_fieldcat2 TYPE lvc_s_fcat.

TYPES : BEGIN OF str_spf,
          carrid    TYPE s_carr_id,
          countryfr TYPE land1,
          cityfrom  TYPE s_from_cit,
        END OF str_spf.

DATA : lt_spf TYPE TABLE OF str_spf,
       ls_spf TYPE str_spf.

TYPES : BEGIN OF str_sfli,
          icon     TYPE char4,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          price    TYPE s_price,
          currency TYPE s_currcode,
          seatsmax TYPE s_seatsmax,
          seatsocc TYPE s_seatsocc,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.


CLASS handle_event DEFINITION.

  PUBLIC SECTION.
    METHODS handle_double_click FOR EVENT double_click OF cl_gui_alv_grid IMPORTING es_row_no. "DOuble-Click Handler Method
    METHODS handle_hotspot_click FOR EVENT hotspot_click OF cl_gui_alv_grid IMPORTING es_row_no. "Hotspot-Click Handler Method
    METHODS handle_toolbar FOR EVENT toolbar OF cl_gui_alv_grid IMPORTING e_object. "TOOLBAR handler method
    METHODS handle_user_command FOR EVENT user_command OF cl_gui_alv_grid IMPORTING e_ucomm. "User-Commnad handler method

ENDCLASS.

CLASS handle_event IMPLEMENTATION.

  METHOD handle_double_click. "Event Handler Method to process the double-click request

    READ TABLE lt_sfli INTO ls_sfli INDEX es_row_no-row_id.

    REFRESH lt_spf.

    SELECT carrid countryfr cityfrom
      FROM spfli
      INTO TABLE lt_spf
      WHERE carrid EQ ls_sfli-carrid.

    CALL SCREEN '0200'.

  ENDMETHOD.

  METHOD handle_hotspot_click. "Event Handler Method to process the Hotspot-click request

    READ TABLE lt_sfli INTO ls_sfli INDEX es_row_no-row_id.

    REFRESH lt_spf.

    SELECT carrid countryfr cityfrom
      FROM spfli
      INTO TABLE lt_spf
      WHERE carrid EQ ls_sfli-carrid.

    CALL SCREEN '0200'.

  ENDMETHOD.

  METHOD handle_toolbar.  "Event Handler Method for assigning Custom Buttons to ALV Toolbar

    DATA: ls_button TYPE stb_button.

    CLEAR ls_button.
    ls_button-function = 'MSG'.
    ls_button-quickinfo = 'Greeting Message'.
    ls_button-butn_type = 0.
    ls_button-disabled = 'Message'.
    ls_button-text = 'MSG'.
    ls_button-icon = '@3I@'.
    APPEND ls_button TO e_object->mt_toolbar.

  ENDMETHOD.

  METHOD handle_user_command. "Event Handler Method to process the User Command of ALV Toolbar Custom Buttons

    CASE e_ucomm.
      WHEN 'MESSAGE'.
        MESSAGE | Welcome to SAP World. | TYPE 'I'.
      WHEN OTHERS.
        "Nothing
    ENDCASE.

  ENDMETHOD.

ENDCLASS.


START-OF-SELECTION.
  SELECT carrid    " Airline Code
  connid    " Flight Connection Number
  fldate    " Flight date
  price     " Airfare
  currency  " Local currency of airline
  seatsmax  " Maximum capacity in economy class
  seatsocc  " Occupied seats in economy class
  FROM z31_sflight   " Flight
  INTO CORRESPONDING FIELDS OF TABLE lt_sfli.

  PERFORM populate_records.

  CALL SCREEN '0100'.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.

  SET PF-STATUS 'Z31_AIR'.

  IF container IS INITIAL.

    CREATE OBJECT container EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container
    CREATE OBJECT grid1 EXPORTING i_parent = container . "Pass the object of Parent Container

*******************************************fieldcatalog creation creation
    ls_fieldcat-col_pos = 1.
    ls_fieldcat-fieldname = 'ICON'.
    ls_fieldcat-scrtext_l = 'Occupency Status'.
    ls_fieldcat-icon = 'X'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 2.
    ls_fieldcat-fieldname = 'CARRID'.
    ls_fieldcat-scrtext_l = 'Airline Code'.
    ls_fieldcat-key ='X'.
    ls_fieldcat-hotspot = abap_true.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 3.
    ls_fieldcat-fieldname = 'CONNID'.
    ls_fieldcat-scrtext_l = 'Flight Connection Number'.
    ls_fieldcat-key ='X'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 4.
    ls_fieldcat-fieldname = 'FLDATE'.
    ls_fieldcat-scrtext_l = 'Flight date'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 5.
    ls_fieldcat-fieldname = 'PRICE'.
    ls_fieldcat-scrtext_l = 'Price'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 6.
    ls_fieldcat-fieldname = 'CURRENCY'.
    ls_fieldcat-scrtext_l = 'Currency Key'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 7.
    ls_fieldcat-fieldname = 'SEATSMAX'.
    ls_fieldcat-scrtext_l = 'Maximum capacity in economy class'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.

    ls_fieldcat-col_pos = 8.
    ls_fieldcat-fieldname = 'SEATSOCC'.
    ls_fieldcat-scrtext_l = 'Occupied seats in economy class'.
    APPEND ls_fieldcat TO lt_fieldcat.
    CLEAR ls_fieldcat.


***********************************layout of fieldcat
    ls_layout-grid_title = 'Airline Table Data'.
    ls_layout-sel_mode = 'A'. "Provide Multiple Selection in ALV Display
    ls_layout-cwidth_opt = 'X'. "Optimize column width

*********************************** Registering the Events


    DATA ob1 TYPE REF TO handle_event.
    CREATE OBJECT ob1.

    SET HANDLER ob1->handle_double_click FOR grid1. "Registering the Double-Click Event for Grid1
    SET HANDLER ob1->handle_hotspot_click FOR grid1. "Registering the Hotspot-Click Event for Grid1
    SET HANDLER OB1->HANDLE_TOOLBAR FOR GRID1.  "Registering the Tool Bar Event for assigning the Custom Button to the ALV Grid ToolBar
    SET HANDLER ob1->handle_user_command FOR grid1. "Registering the User-Command Event for Grid1

*********************************** ALV Display
    CALL METHOD grid1->set_table_for_first_display
      EXPORTING
        is_layout                     = ls_layout
      CHANGING
        it_outtab                     = lt_sfli
        it_fieldcatalog               = lt_fieldcat
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4.
    IF sy-subrc <> 0.
*     Implement suitable error handling here
    ENDIF.

  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.

  CASE sy-ucomm.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN 'CANCEL'.
      LEAVE TO SCREEN 0.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN OTHERS.
      "NOTHING.
  ENDCASE.

ENDMODULE.

FORM populate_records .

  LOOP AT lt_sfli INTO ls_sfli.
    IF ls_sfli-seatsocc LT 200.
      ls_sfli-icon = icon_green_light.
    ELSEIF ls_sfli-seatsocc BETWEEN 200 AND 400.
      ls_sfli-icon = icon_yellow_light.
    ELSE.
      ls_sfli-icon = icon_red_light.
    ENDIF.
    MODIFY lt_sfli FROM ls_sfli TRANSPORTING icon.
  ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'ZPF_TEST'.

  REFRESH lt_fieldcat2.

  ls_fieldcat2-col_pos = 1.
  ls_fieldcat2-fieldname = 'CARRID'.
  ls_fieldcat2-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 2.
  ls_fieldcat2-fieldname = 'LAND1'.
  ls_fieldcat2-scrtext_l = 'Country From'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 3.
  ls_fieldcat2-fieldname = 'CITYFROM'.
  ls_fieldcat2-scrtext_l = 'Departure city'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  CREATE OBJECT lo_cont2 EXPORTING container_name = 'CONT2'.

  CREATE OBJECT lo_grid2 EXPORTING i_parent = lo_cont2.

  CALL METHOD lo_grid2->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_spf
      it_fieldcatalog               = lt_fieldcat2
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  CASE sy-ucomm.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
    WHEN OTHERS.
      "NOTHING
  ENDCASE.
ENDMODULE.


