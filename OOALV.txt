Sample Code: OOALV Program using SAP FM to generate FieldCatalog
REPORT z31_ooalv1.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.


DATA: lt_fieldcat TYPE lvc_t_fcat.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'  "Building the FieldCatalog Using SAP FM
  EXPORTING
*   I_BUFFER_ACTIVE        =
    i_structure_name       = 'ZSTR_SFLI'
*   I_CLIENT_NEVER_DISPLAY = 'X'
*   I_BYPASSING_BUFFER     =
*   I_INTERNAL_TABNAME     =
  CHANGING
    ct_fieldcat            = lt_fieldcat
  EXCEPTIONS
    inconsistent_interface = 1
    program_error          = 2
    OTHERS                 = 3.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container

CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
*   it_sort                       =
*   it_filter                     =
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL SCREEN '0100'.









Sample Code: Manually Created FieldCatalog
REPORT z31_ooalv2.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.



DATA: lt_fieldcat TYPE lvc_t_fcat,
      ls_fieldcat TYPE lvc_s_fcat.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

ls_fieldcat-col_pos = 1.
ls_fieldcat-fieldname = 'CARRID'.
ls_fieldcat-scrtext_l = 'Airline Code'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 2.
ls_fieldcat-fieldname = 'CONNID'.
ls_fieldcat-scrtext_l = 'Flight Connection Number'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 3.
ls_fieldcat-fieldname = 'FLDATE'.
ls_fieldcat-scrtext_l = 'Flight date'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 4.
ls_fieldcat-fieldname = 'CURRENCY'.
ls_fieldcat-scrtext_l = 'Currency Key'.
APPEND ls_fieldcat TO lT_fieldcat.
CLEAR ls_fieldcat.

CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container

CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
*   it_sort                       =
*   it_filter                     =
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.

CALL SCREEN '0100'.










Sample Code: Non-Event Based Functionality Like Sorting/Filtering/Coloring
REPORT z31_ooalv3.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.



DATA: lt_fieldcat TYPE lvc_t_fcat,
      ls_fieldcat TYPE lvc_s_fcat.

DATA: lt_sort   TYPE lvc_t_sort,
      ls_sort   TYPE lvc_s_sort,
      lt_filter TYPE lvc_t_filt,
      ls_filter TYPE lvc_s_filt.

DATA: lo_obj  TYPE REF TO cl_gui_custom_container,
      lo_grid TYPE REF TO cl_gui_alv_grid.


SELECT-OPTIONS : s_carrid FOR sflight-carrid.


SELECT carrid connid fldate currency
  FROM sflight
  INTO TABLE lt_sfli
  WHERE carrid IN s_carrid.

ls_fieldcat-col_pos = 1.
ls_fieldcat-fieldname = 'CARRID'.
ls_fieldcat-scrtext_l = 'Airline Code'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 2.
ls_fieldcat-fieldname = 'CONNID'.
ls_fieldcat-scrtext_l = 'Flight Connection Number'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 3.
ls_fieldcat-fieldname = 'FLDATE'.
ls_fieldcat-scrtext_l = 'Flight date'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_fieldcat-col_pos = 4.
ls_fieldcat-fieldname = 'CURRENCY'.
ls_fieldcat-scrtext_l = 'Currency Key'.
APPEND ls_fieldcat TO lt_fieldcat.
CLEAR ls_fieldcat.

ls_sort-fieldname = 'CONNID'. "Sorting --> Non-Event Based Functionality
ls_sort-up ='X'.
APPEND ls_sort TO lt_sort.

ls_filter-fieldname = 'CARRID'.  "Filtering --> Non-Event Based Functionality
ls_filter-sign = 'I'.
ls_filter-option = 'EQ'.
ls_filter-low = 'AA'.
APPEND ls_filter TO lt_filter.


CREATE OBJECT lo_obj EXPORTING container_name = 'CONT'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

CREATE OBJECT lo_grid EXPORTING i_parent = lo_obj. "Pass the object of Parent Container


CALL METHOD lo_grid->set_table_for_first_display
  CHANGING
    it_outtab                     = lt_sfli
    it_fieldcatalog               = lt_fieldcat
    it_sort                       = lt_sort
    it_filter                     = lt_filter
  EXCEPTIONS
    invalid_parameter_combination = 1
    program_error                 = 2
    too_many_lines                = 3
    OTHERS                        = 4.
IF sy-subrc <> 0.
* Implement suitable error handling here
ENDIF.


CALL SCREEN '0200'.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0200  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0200 OUTPUT.
  SET PF-STATUS 'AIR_GUI'.
  SET TITLEBAR 'AIR_TITLE'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0200  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0200 INPUT.
  IF sy-ucomm EQ 'E' OR sy-ucomm EQ 'CANCEL'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.










Sample Code: Double-Click Event
REPORT z31_ooalv4.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.

TYPES : BEGIN OF str_spf,
          carrid    TYPE s_carr_id,
          countryfr TYPE land1,
          cityfrom  TYPE s_from_cit,
        END OF str_spf.

DATA : lt_spf TYPE TABLE OF str_spf,
       ls_spf TYPE str_spf.

DATA: lt_fieldcat1 TYPE lvc_t_fcat,
      ls_fieldcat1 TYPE lvc_s_fcat.
DATA: lt_fieldcat2 TYPE lvc_t_fcat,
      ls_fieldcat2 TYPE lvc_s_fcat.

DATA: lo_cont1 TYPE REF TO cl_gui_custom_container,
      lo_grid1 TYPE REF TO cl_gui_alv_grid.
DATA: lo_cont2 TYPE REF TO cl_gui_custom_container,
      lo_grid2 TYPE REF TO cl_gui_alv_grid.

DATA: lt_index_rows TYPE lvc_t_row,
      ls_index_rows TYPE lvc_s_row.

CLASS class1 DEFINITION.
  PUBLIC SECTION.
    METHODS handle FOR EVENT double_click OF cl_gui_alv_grid.
ENDCLASS.

CLASS class1 IMPLEMENTATION.
  METHOD handle. "Event Handler Method to process the double-click request

    CALL METHOD lo_grid1->get_selected_rows   "Returns Index of Selected Row
      IMPORTING
        et_index_rows = lt_index_rows.

    READ TABLE lt_index_rows INTO ls_index_rows INDEX 1.
    IF sy-subrc EQ 0.

      READ TABLE lt_sfli INTO ls_sfli INDEX ls_index_rows-index.

      SELECT carrid countryfr cityfrom
        FROM spfli
        INTO TABLE lt_spf
        WHERE carrid EQ ls_sfli-carrid.

      CALL METHOD lo_grid2->set_table_for_first_display
        CHANGING
          it_outtab                     = lt_spf
          it_fieldcatalog               = lt_fieldcat2
*         it_sort                       =
*         it_filter                     =
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

SELECT-OPTIONS : s_carrid FOR sflight-carrid.

START-OF-SELECTION.

  SELECT carrid connid fldate currency
    FROM sflight
    INTO TABLE lt_sfli
    WHERE carrid IN s_carrid.

  ls_fieldcat1-col_pos = 1.
  ls_fieldcat1-fieldname = 'CARRID'.
  ls_fieldcat1-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 2.
  ls_fieldcat1-fieldname = 'CONNID'.
  ls_fieldcat1-scrtext_l = 'Flight Connection Number'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 3.
  ls_fieldcat1-fieldname = 'FLDATE'.
  ls_fieldcat1-scrtext_l = 'Flight date'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 4.
  ls_fieldcat1-fieldname = 'CURRENCY'.
  ls_fieldcat1-scrtext_l = 'Currency Key'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.


  CREATE OBJECT lo_cont1 EXPORTING container_name = 'CONT1'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

  CREATE OBJECT lo_grid1 EXPORTING i_parent = lo_cont1. "Pass the object of Parent Container


  CALL METHOD lo_grid1->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_sfli
      it_fieldcatalog               = lt_fieldcat1
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  ls_fieldcat2-col_pos = 1.
  ls_fieldcat2-fieldname = 'CARRID'.
  ls_fieldcat2-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 2.
  ls_fieldcat2-fieldname = 'LAND1'.
  ls_fieldcat2-scrtext_l = 'Country From'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 3.
  ls_fieldcat2-fieldname = 'CITYFROM'.
  ls_fieldcat2-scrtext_l = 'Departure city'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  CREATE OBJECT lo_cont2 EXPORTING container_name = 'CONT2'.

  CREATE OBJECT lo_grid2 EXPORTING i_parent = lo_cont2.

  CALL METHOD lo_grid2->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_spf
      it_fieldcatalog               = lt_fieldcat2
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  DATA lo_object TYPE REF TO class1.
  CREATE OBJECT lo_object.
  SET HANDLER lo_object->handle FOR lo_grid1.   "Registering the Double-Click Event for Grid1

  CALL SCREEN '0100'.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm EQ 'E'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.










Sample Code: HotSpot-click Event 
REPORT z31_ooalv4.

TABLES: sflight.

TYPES : BEGIN OF str_sfli,
          carrid   TYPE s_carr_id,
          connid   TYPE s_conn_id,
          fldate   TYPE s_date,
          currency TYPE s_currcode,
        END OF str_sfli.

DATA : lt_sfli TYPE TABLE OF str_sfli,
       ls_sfli TYPE str_sfli.

TYPES : BEGIN OF str_spf,
          carrid    TYPE s_carr_id,
          countryfr TYPE land1,
          cityfrom  TYPE s_from_cit,
        END OF str_spf.

DATA : lt_spf TYPE TABLE OF str_spf,
       ls_spf TYPE str_spf.

DATA: lt_fieldcat1 TYPE lvc_t_fcat,
      ls_fieldcat1 TYPE lvc_s_fcat.
DATA: lt_fieldcat2 TYPE lvc_t_fcat,
      ls_fieldcat2 TYPE lvc_s_fcat.

DATA: lo_cont1 TYPE REF TO cl_gui_custom_container,
      lo_grid1 TYPE REF TO cl_gui_alv_grid.
DATA: lo_cont2 TYPE REF TO cl_gui_custom_container,
      lo_grid2 TYPE REF TO cl_gui_alv_grid.

DATA: lt_index_rows TYPE lvc_t_row,
      ls_index_rows TYPE lvc_s_row.

CLASS class1 DEFINITION.
  PUBLIC SECTION.
    METHODS handle FOR EVENT hotspot_click OF cl_gui_alv_grid.
ENDCLASS.

CLASS class1 IMPLEMENTATION.
  METHOD handle. "Event Handler Method to process the HotSpot-click request

    CALL METHOD lo_grid1->get_selected_rows   "Returns Index of Selected Row
      IMPORTING
        et_index_rows = lt_index_rows.

    READ TABLE lt_index_rows INTO ls_index_rows INDEX 1.
    IF sy-subrc EQ 0.

      READ TABLE lt_sfli INTO ls_sfli INDEX ls_index_rows-index.

      SELECT carrid countryfr cityfrom
        FROM spfli
        INTO TABLE lt_spf
        WHERE carrid EQ ls_sfli-carrid.

      CALL METHOD lo_grid2->set_table_for_first_display
        CHANGING
          it_outtab                     = lt_spf
          it_fieldcatalog               = lt_fieldcat2
*         it_sort                       =
*         it_filter                     =
        EXCEPTIONS
          invalid_parameter_combination = 1
          program_error                 = 2
          too_many_lines                = 3
          OTHERS                        = 4.
      IF sy-subrc <> 0.
* Implement suitable error handling here
      ENDIF.

    ENDIF.

  ENDMETHOD.
ENDCLASS.

SELECT-OPTIONS : s_carrid FOR sflight-carrid.

START-OF-SELECTION.

  SELECT carrid connid fldate currency
    FROM sflight
    INTO TABLE lt_sfli
    WHERE carrid IN s_carrid.

  ls_fieldcat1-col_pos = 1.
  ls_fieldcat1-fieldname = 'CARRID'.
  ls_fieldcat1-scrtext_l = 'Airline Code'.
  ls_fieldcat1-hotspot = 'X'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 2.
  ls_fieldcat1-fieldname = 'CONNID'.
  ls_fieldcat1-scrtext_l = 'Flight Connection Number'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 3.
  ls_fieldcat1-fieldname = 'FLDATE'.
  ls_fieldcat1-scrtext_l = 'Flight date'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.

  ls_fieldcat1-col_pos = 4.
  ls_fieldcat1-fieldname = 'CURRENCY'.
  ls_fieldcat1-scrtext_l = 'Currency Key'.
  APPEND ls_fieldcat1 TO lt_fieldcat1.
  CLEAR ls_fieldcat1.


  CREATE OBJECT lo_cont1 EXPORTING container_name = 'CONT1'. "CONT --> Name of the Screen CustCtrl Name to Link Container To

  CREATE OBJECT lo_grid1 EXPORTING i_parent = lo_cont1. "Pass the object of Parent Container


  CALL METHOD lo_grid1->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_sfli
      it_fieldcatalog               = lt_fieldcat1
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  ls_fieldcat2-col_pos = 1.
  ls_fieldcat2-fieldname = 'CARRID'.
  ls_fieldcat2-scrtext_l = 'Airline Code'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 2.
  ls_fieldcat2-fieldname = 'LAND1'.
  ls_fieldcat2-scrtext_l = 'Country From'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  ls_fieldcat2-col_pos = 3.
  ls_fieldcat2-fieldname = 'CITYFROM'.
  ls_fieldcat2-scrtext_l = 'Departure city'.
  APPEND ls_fieldcat2 TO lt_fieldcat2.
  CLEAR ls_fieldcat2.

  CREATE OBJECT lo_cont2 EXPORTING container_name = 'CONT2'.

  CREATE OBJECT lo_grid2 EXPORTING i_parent = lo_cont2.

  CALL METHOD lo_grid2->set_table_for_first_display
    CHANGING
      it_outtab                     = lt_spf
      it_fieldcatalog               = lt_fieldcat2
*     it_sort                       =
*     it_filter                     =
    EXCEPTIONS
      invalid_parameter_combination = 1
      program_error                 = 2
      too_many_lines                = 3
      OTHERS                        = 4.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  DATA lo_object TYPE REF TO class1.
  CREATE OBJECT lo_object.
  SET HANDLER lo_object->handle FOR lo_grid1.   "Registering the HotSpot-Click Event for Grid1

  CALL SCREEN '0100'.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm EQ 'E'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.

