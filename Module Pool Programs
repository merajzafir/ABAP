*&---------------------------------------------------------------------*
*& Module Pool       Z31_MODULE2
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
" Sub-Screen Program
PROGRAM z31_module2.
TABLES: scarr, sflight.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm = 'OKAY'.
    SELECT SINGLE carrid, connid, fldate
      FROM sflight
      INTO @DATA(ls_sfli)
      WHERE carrid = @scarr-carrid.

    IF ls_sfli IS NOT INITIAL.
        sflight-carrid = ls_sfli-carrid.
        sflight-connid = ls_sfli-connid.
        sflight-fldate = ls_sfli-fldate.
    ENDIF.

  ENDIF.
ENDMODULE.





*&---------------------------------------------------------------------*
*& Modulpool  Z31_MODULE3
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
" Modal Dialog Box Screen
PROGRAM z31_module3.
TABLES: scarr, sflight.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm = 'DIALOG'.
    CALL SCREEN 0101 STARTING AT 10 20 ENDING AT 40 80.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0101  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0101 INPUT.
  IF sy-ucomm = 'BACK'.
    LEAVE TO SCREEN 0.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  DATA_FETCH  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE data_fetch OUTPUT.
  IF scarr-carrid IS NOT INITIAL.

    SELECT SINGLE carrid, connid, fldate
      FROM sflight
      INTO @DATA(ls_sfli)
      WHERE carrid = @scarr-carrid.

    IF ls_sfli IS NOT INITIAL.
      sflight-carrid = ls_sfli-carrid.
      sflight-connid = ls_sfli-connid.
      sflight-fldate = ls_sfli-fldate.
    ENDIF.

  ENDIF.
ENDMODULE.





*&---------------------------------------------------------------------*
*& Report Z31_MODULE1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
" AT EXIT-COMMAND
PROGRAM z31_module1.

DATA: num1 TYPE int2,
      num2 TYPE int2,
      res  TYPE int2.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm = 'SUBMIT'.
    res = num1 + num2.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'ZPF_STATUS'.
*  SET TITLEBAR 'xxx'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  FORCE_EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE force_exit INPUT.
 CASE SY-ucomm.
   WHEN 'BACK'.
     leave to SCREEN 0.
   ENDCASE.
ENDMODULE.






*&---------------------------------------------------------------------*
*& Modulpool  Z31_MODULE4
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
" CHAIN-ENDCHAIN & PROCESS ON VALUE REQUEST ( POV ) Program
PROGRAM z31_module4.
TABLES: sflight.

DATA: p_carrid TYPE char3.
*&---------------------------------------------------------------------*
*&      Module  FIELD_VALIDATION  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE field_validation INPUT.
  IF sy-ucomm = 'SHOW'.
    SELECT SINGLE * FROM sflight
      WHERE carrid = p_carrid.
    IF sy-subrc <> 0.
      MESSAGE 'Inavlid Input' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm = 'SHOW'.
    SELECT SINGLE * FROM sflight
      WHERE carrid = p_carrid.
    CALL SCREEN '0200'.
  ENDIF.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  F4HELP  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE f4help INPUT.

  TYPES: BEGIN OF str,
           carrid TYPE char3,
         END OF str.
  data: lt_value TYPE TABLE OF str.

  SELECT DISTINCT carrid FROM sflight INTO TABLE lt_value.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      retfield    = 'CARRID'
      dynpprog    = sy-repid
      dynpnr      = sy-dynnr
      dynprofield = 'LV_CARR'
      value_org   = 'S'
    TABLES
      value_tab   = lt_value.


ENDMODULE.




